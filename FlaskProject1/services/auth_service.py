from flask import url_for
from flask_login import login_user as flask_login_user, logout_user
from models.user import User
from models import db

def register_user(username, password, confirm_password):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ —Å—ä–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ –ø–∞—Ä–æ–ª–∏—Ç–µ
        if password != confirm_password:
            return False, '–ü–∞—Ä–æ–ª–∏—Ç–µ –Ω–µ —Å—ä–≤–ø–∞–¥–∞—Ç'

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ –µ –∑–∞–µ—Ç–æ
        existing_user = User.query.filter_by(username=username).first()
        if existing_user:
            return False, '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ –µ –∑–∞–µ—Ç–æ.'

        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
        user = User(username=username)
        user.set_password(password)

        # –ó–∞–ø–∏—Å–≤–∞–Ω–µ –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
        db.session.add(user)
        db.session.commit()

        return True, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è—Ç–∞ –µ —É—Å–ø–µ—à–Ω–∞! –ú–æ–ª—è, –≤–ª–µ–∑—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞.'

    except Exception as e:
        db.session.rollback()
        return False, f'–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {str(e)}'

def login_user_service(username, password):
    """
    –í—Ö–æ–¥ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
    """
    try:
        print(f"üîê Attempting login for user: {username}")

        # –¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –≤ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏
        user = User.query.filter_by(username=username).first()

        if user:
            print(f"‚úÖ User found: {user.username}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞—Ç–∞ - –∏–∑–ø–æ–ª–∑–≤–∞–π check_password
            password_correct = user.check_password(password)
            print(f"üîë Password check: {password_correct}")

            if password_correct:
                # –õ–æ–≥–∏–Ω –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å Flask-Login
                flask_login_user(user)
                print(f"üöÄ Login successful")
                print(f"üë§ User authenticated: {user.is_authenticated}")

                # –û–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ –ø—Ä–µ–Ω–∞—Å–æ—á–≤–∞–Ω–µ—Ç–æ —Å–ø–æ—Ä–µ–¥ —Ä–æ–ª—è—Ç–∞
                if user.is_admin:
                    redirect_url = url_for('dashboard.admin')
                    print("üéØ Redirecting to admin dashboard")
                else:
                    redirect_url = url_for('dashboard.dashboard')
                    print("üéØ Redirecting to user dashboard")

                return True, '–£—Å–ø–µ—à–µ–Ω –≤—Ö–æ–¥!', redirect_url
            else:
                print("‚ùå Incorrect password")
                return False, '–ù–µ–≤–∞–ª–∏–¥–Ω–∞ –ø–∞—Ä–æ–ª–∞.', url_for('auth.login')
        else:
            print("‚ùå User not found")
            return False, '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.', url_for('auth.login')

    except Exception as e:
        print(f"üí• Login error: {e}")
        return False, f'–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥: {str(e)}', url_for('auth.login')

def logout_user_service():
    """
    –ò–∑—Ö–æ–¥ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
    """
    logout_user()
    return True, '–£—Å–ø–µ—à–Ω–æ –∏–∑–ª—è–∑–æ—Ö—Ç–µ –æ—Ç —Å–∏—Å—Ç–µ–º–∞—Ç–∞.'